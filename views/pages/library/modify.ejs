<div class="container my-4" x-data="imageContainer()">
  <template x-if="showEditor">
    <div class="cropper-js-img row mb-4 border rounded-2 p-2">
      <img x-ref="editor" />

      <div class="mt-2 d-flex justify-content-between">
        <button class="btn btn-dark" x-on:click="clearCropper()">Cancel</button>
        <button class="btn btn-success" x-on:click="cropImage()">Modify</button>
      </div>
    </div>
  </template>
</div>

<script>
  function imageContainer() {
    return {
      showEditor: false,
      cropper: null,
      imageToCrop: "",

      modifyImage(src, name) {
        this.imageToCrop = name;
        this.$refs.editor.src = "/uploads/images/" + src;

        this.cropper = new Cropper(this.$refs.editor, {
          initialAspectRatio: 1,
          viewMode: 1,
          minCropBoxHeight: 10,
          minCropBoxWidth: 10,
          background: false,
          autoCropArea: 1,
          checkOrientation: false,
          guides: true,
        });
      },

      clearCropper() {
        this.imageToCrop = "";
        this.$refs.editor.src = "";
        this.showEditor = false;
        this.cropper.destroy();
      },

      cropImage() {
        this.cropper.getCroppedCanvas().toBlob((blob) => {
          const formData = new FormData();
          formData.append("upload_image", blob, this.imageToCrop);

          fetch("/library?_csrf=<%= props.csrf %>", {
            method: "POST",
            body: formData,
          }).then((res) => {
            if (res.ok) {
              this.clearCropper();
            }
          });
        });
      },
    };
  }
</script>
